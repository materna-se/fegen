/**
 * Copyright 2020 Materna Information & Communications SE
 *
 * Permission is hereby granted, free of charge, to any person obtaining a copy
 * of this software and associated documentation files (the "Software"), to deal
 * in the Software without restriction, including without limitation the rights
 * to use, copy, modify, merge, publish, distribute, sublicense, and/or sell
 * copies of the Software, and to permit persons to whom the Software is
 * furnished to do so, subject to the following conditions:
 *
 * The above copyright notice and this permission notice shall be included in all
 * copies or substantial portions of the Software.
 *
 * THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
 * IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
 * FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE
 * AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
 * LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM,
 * OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE
 * SOFTWARE.
 */
package de.materna.fegen.web.templates

import de.materna.fegen.core.join
import de.materna.fegen.web.FeGenWeb
import de.materna.fegen.web.nameNew
import de.materna.fegen.web.nameClient
import de.materna.fegen.web.nameDto
import de.materna.fegen.web.projectionTypeInterfaceName

/**
 * Generates the ApiClient class which helps to navigate to the different clients as well as the client classes itself.
 *
 * # DISCLAIMER:
 *
 * This implementation uses the isEntity information of the `DomainTypeDSL`, i.e., it does not respect any spring data rest
 * projections or configurations in rest repositories as well as expects the REST API to respect a whole bunch of
 * naming conventions. This will change in future implementations.
 */
fun FeGenWeb.toApiClientTS() = """
    // This file has been generated by FeGen based on a spring application. Do not edit it.
    
    import {
        BaseClient, RequestAdapter,
        ApiHateoasObjectBase, ApiHateoasObjectReadMultiple, Items, PagedItems, ApiNavigationLinks,
        apiHelper, stringHelper, Dto, Entity
    } from '@materna-se/fegen-runtime';
    import { ${entityTypes.filter { it.exported }.join(separator = ", ") { "$nameNew, $nameDto, $name" }} } from './Entities';
    import { ${enumTypes.join(separator = ", ") { name }} } from './Entities';
    import { ${projectionTypes.join(separator = ", ") { projectionTypeInterfaceName }} } from './Entities';
    ${customControllers.join(indent = 1) { "import { $nameClient } from './controller/$nameClient';" }}

    export class ApiClient {
        ${entityTypes.filter { it.exported }.join(indent = 2) { """
            public readonly ${nameClient.decapitalize()}: $nameClient;
        """.trimIndent()
        }}
        ${customControllers.join(indent = 2) { """
            public readonly ${nameClient.decapitalize()}: $nameClient;
        """.trimIndent()
        }}

        private readonly baseUrl: string;

        constructor(requestAdapter?: RequestAdapter, baseUrl?: string) {
            this.baseUrl = baseUrl || "";
            const adapter = requestAdapter || new RequestAdapter(this.baseUrl);
            ${entityTypes.filter { it.exported }.join(indent = 3) {"""
                this.${nameClient.decapitalize()} = new $nameClient(this, adapter);
            """.trimIndent()
            }}
            ${customControllers.join(indent = 3) {"""
                this.${nameClient.decapitalize()} = new $nameClient(adapter);
            """.trimIndent()}}
        }
    }
""".trimIndent()
